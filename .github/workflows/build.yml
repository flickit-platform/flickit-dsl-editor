name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

env:
  MAVEN_USERNAME: avansoft

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      project_version: ${{ steps.project.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Extract Maven project version
        run: echo version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT
        id: project

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.project.outputs.version }}
        run: |
          echo $RELEASE_VERSION

      - name: Build with Maven
        run: mvn clean compile

  deploy-package:
    needs: [build]
    name: deploy package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

  upload-snapshot-update-site:
    needs: [build]
    name: upload snapshot update site
    runs-on: ubuntu-latest
    if: ${{ ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) &&
      contains( needs.build.outputs.project_version , 'SNAPSHOT') }}

    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Verify with Maven
        run: mvn clean verify

      - name: Copy files
        run:
          cp org.flickit.dsl.editor.v2.repository/category.xml . &&
          cp org.flickit.dsl.editor.v2.repository/target/repository/*.jar . &&
          cp -r org.flickit.dsl.editor.v2.repository/target/repository/plugins . &&
          cp -r org.flickit.dsl.editor.v2.repository/target/repository/features .

      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: update-${{ needs.build.outputs.project_version }}
          path: |
            plugins
            features
            artifacts.jar
            content.jar
            category.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag-and-release:
    needs: [deploy-package]
    name: tag and release
    runs-on: ubuntu-latest
    if: ${{ ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) &&
      !contains( needs.sonar.outputs.project_version , 'SNAPSHOT') }}

    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.build.outputs.project_version }}
          name: Release ${{ needs.build.outputs.project_version }}
          makeLatest: true

  upload-update-site:
    needs: [tag-and-release]
    name: upload update site
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    if: ${{ ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) &&
      !contains( needs.build.outputs.project_version , 'SNAPSHOT') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Verify with Maven
        run: mvn clean verify

      - name: Archive files
        run:
          cp org.flickit.dsl.editor.v2.repository/category.xml org.flickit.dsl.editor.v2.repository/target/repository/ &&
          cd org.flickit.dsl.editor.v2.repository/target/repository/ &&
          zip -r update-v${{ needs.build.outputs.project_version }}.zip features plugins artifacts.jar content.jar category.xml &&
          mv update-v${{ needs.build.outputs.project_version }}.zip ../../../

      - name: Upload archive
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: update-v${{ needs.build.outputs.project_version }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ needs.build.outputs.project_version }}
          allowUpdates: true

      - name: Update readme download button
        env:
          GITHUB_USER: "avansoft"
          REPO: "flickit-dsl-editor"
          FORMAT: "zip"
          VERSION: "v${{ needs.build.outputs.project_version }}"
          COLOR: "blue"
          BEGIN_TAG: "<!-- BEGIN LATEST UPDATE SITE DOWNLOAD BUTTON -->"
          END_TAG: "<!-- END LATEST UPDATE SITE DOWNLOAD BUTTON -->"
        run: |
          UPDATE=$(cat README.md | perl -0777 -pe 's#(${{ env.BEGIN_TAG }})(?:.|\n)*?(${{ env.END_TAG }})#${1}\n[![Download ${{ env.FORMAT }}](https://custom-icon-badges.demolab.com/badge/-Download-${{ env.COLOR }}?style=for-the-badge&logo=download&logoColor=white "Download ${{ env.FORMAT }}")](https://github.com/${{ env.GITHUB_USER }}/${{ env.REPO }}/releases/download/${{ env.VERSION }}/update-${{ env.VERSION }}.${{ env.FORMAT }})\n${2}#g')
          echo "${UPDATE}" > README.md

      - name: Commit readme file changes
        uses: EndBug/add-and-commit@v9
        with:
          add: README.md
          message: "Update update-site download link on README.me file"
